<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ja">
  <head>
    <title>C#プログラミング講習会 - 5</title>
    <link rel="stylesheet" href="../common.css" type="text/css" />  
    <!--[if IE]><script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script><![endif]-->
    <script src="../jquery-1.7.2.min.js"></script>
    <script src="../common.js"></script>
  </head>
  <body>
    <nav><a href="../../index.htm">UTMC 12GW</a> &#187; <a href="../index.htm">C#プログラミング講習会</a> &#187; 5. 続・処理を分岐させる (<a href="04.htm">&lt; PREV</a> <a href="06.htm">NEXT &gt;</a>)</nav>
    <h1>C#プログラミング講習会</h1>
    <h2>5. 続・処理を分岐させる</h2>
    <h3>複雑な条件式</h3>
    <p>「A かつ B」のような条件式を作りたい時は、<strong>&amp;&amp;</strong>（論理積演算子）を使います。</p>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    int x = int.Parse(Console.ReadLine());
    if (x &gt; 0 <strong>&amp;&amp;</strong> x % 2 == 0)
    {
      Console.WriteLine("正の2の倍数です");
    }
  }
}
    </code></pre>
    <p>「A または B」のような条件式を作りたい時は、<strong>||</strong>（論理和演算子）を使います。</p>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    int x = int.Parse(Console.ReadLine());
    if (x % 2 == 0 <strong>||</strong> x % 3 == 0)
    {
      Console.WriteLine("2の倍数または3の倍数です");
    }
  }
}
    </code></pre>
    <p>「A ではない」のような条件式を作りたい時は、<strong>!</strong>（論理否定演算子）を使います。</p>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    int x = int.Parse(Console.ReadLine());
    if (<strong>!</strong>(x % 3 == 0))
    {
      Console.WriteLine("3の倍数ではありません");
    }
  }
}
    </code></pre>
    <p>演算子の優先順位に注意してください（<code>!</code>は結合の優先順位がかなり高いので <code>!x % 3 == 0</code> だと <code>(!x) % 3 == 0</code> と解釈されてしまいます）。
    優先順位がよく分からない場合はとりあえず括弧を付けておきましょう（もっとも、上の場合 != 演算子を用いて <code>x % 3 != 0</code> と表せるのですが）。</p>
    <h3>switch 文</h3>
    <p><strong>switch 文</strong>を使うことである変数の値によって処理を分岐させることができます。</p>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    int x = int.Parse(Console.ReadLine());
    switch (x)
    {
      case 0:
        Console.WriteLine("A");
        break;
      case 1:
        Console.WriteLine("B");
        break;
      case 2:
      case 3:
        Console.WriteLine("C");
        break;
      default:
        Console.WriteLine("D");
        break;
    }
  }
}
    </code></pre>
    <p>上の例では、xが0ならA、1ならB、2, 3ならC、それ以外ならDが表示されます（defaultがif 文のelseの役割を果たします）。</p>
    <p>C#では、caseでの処理の終わりには<strong>break</strong>が必要です。</p>
<!--    <h3>定数</h3>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    const int X = 3;
    const int Y = 4;
    int z = int.Parse(Console.ReadLine());
    switch (z)
    {
      case X:
        Console.WriteLine("X");
        break;
      case Y:
        Console.WriteLine("Y");
        break;
      default:
        Console.WriteLine("Default");
        break;
    }
  }
}
    </code></pre>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    const double PI = 3.14159265;
    PI = 3.0;
  }
}
    </code></pre>
    <pre class="code"><code>
using System;
class Program
{
  static void Main()
  {
    const double PI = 3.14159265;
    const double PLANCK = 6.62606957e-34;
    const double HBAR = PLANCK / (2 * PI);
    Console.WriteLine(HBAR);
  }
}
    </code></pre>-->
    <nav><a href="../../index.htm">UTMC 12GW</a> &#187; <a href="../index.htm">C#プログラミング講習会</a> &#187; 5. 続・処理を分岐させる (<a href="04.htm">&lt; PREV</a> <a href="06.htm">NEXT &gt;</a>)</nav>
  </body>
</html>
